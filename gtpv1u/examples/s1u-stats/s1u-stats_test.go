package main

import (
	"testing"
	"github.com/condor/gtpv1u"
)

func TestPacket(t *testing.T) {
	inBytes := []byte{0x30, 0xff, 0x00, 0x4b, 0x00, 0x07, 0xa1, 0x2d, 0x45, 0x00, 0x00, 0x4b,
		0x8c, 0x4a, 0x40, 0x00, 0x40, 0x11, 0x03, 0x97, 0xac, 0x15, 0x14, 0x02,
		0xc0, 0xa8, 0x2a, 0x01, 0x05, 0xcd, 0x00, 0x35, 0x00, 0x37, 0x0b, 0xc3,
		0x01, 0xab, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
		0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x07, 0x67, 0x73, 0x74, 0x61, 0x74,
		0x69, 0x63, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x1c, 0x00, 0x01}

	p, err := gtpv1u.DecodePacket(inBytes)
	if err != nil {
		t.Fatalf("Error in parsing GTP packet")
	}
	handle := NewGTPv1uStatsService(40)

	for i:=0 ; i<100 ; i++ {
		handle.GTPPacketHandle(p, &inBytes, nil, nil)
	}
	for i:=0 ; i<10 ; i++ {
		handle.WrongGTPPacketHandle(&inBytes, nil, nil)
	}

	if handle.stats["Type_17"] != 100 {
		t.Fatalf("It should have 100 UDP packets")
	}
	if handle.stats["CorrectGTPPacket"] != 100 {
		t.Fatalf("It should have 100 correct GTP packets")
	}
	if handle.stats["WrongGTPPacket"] != 10 {
		t.Fatalf("It should have 10 wrong GTP packets")
	}

	handle.PrintReport()

	if len(handle.stats) != 0 {
		t.Fatalf("Stats should be reseted after report print")
	}
}

